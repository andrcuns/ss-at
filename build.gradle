buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.4"
        classpath "net.masterthought:cucumber-reporting:3.11.0"
    }
}

repositories {
    jcenter()
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'checkstyle'

apply from: "${rootDir}/gradle/cuke_reporter.gradle"
apply from: "${rootDir}/gradle/allure.gradle"
apply from: "${rootDir}/gradle/dependencies.gradle"

idea {
    project {
        languageLevel = "1.8"
    }
}

dependencies {
    testCompile libs.selenium
    testCompile libs.logging
    testCompile libs.cucumber
    testCompile webdrivermanager
    testCompile guice
    testCompile junit
    testCompile selenide
}

test {
    String cucumberTags = project.findProperty('tags') ?: '~@incomplete'
    String report = project.findProperty('report') ?: 'cucumber'
    Map reportPlugin = [
            cucumberHtml: "--plugin json:${reporting.baseDir}/cucumber/features.json",
            allure      : "--plugin io.qameta.allure.cucumberjvm.AllureCucumberJvm",
            cucumber    : "--plugin html:build/cucumber"
    ]
    List jvmArgList = [
            "-Dcucumber.options=--tags ${cucumberTags} ${reportPlugin[report]} --plugin pretty"
    ] + System.properties.collect { k, v -> "-D$k=$v" }

    jvmArgs = jvmArgList

    testLogging {
        events "standardOut"
    }

    if (report == 'cucumberHtml') {
        doLast {
            generateCucumberReport()
        }
    }
}

checkstyle {
    toolVersion = '8.3'
}