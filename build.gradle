buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.5"
    }
}

repositories {
    jcenter()
}

apply plugin: 'java-library'
apply plugin: 'idea'
apply plugin: 'checkstyle'

apply from: "${rootDir}/gradle/cuke_reporter.gradle"
apply from: "${rootDir}/gradle/allure.gradle"
apply from: "${rootDir}/gradle/dependencies.gradle"

idea {
    project {
        languageLevel = "1.8"
    }
}

dependencies {
    testImplementation libs.logging
    testImplementation libs.cucumber
    testImplementation libs.allure
    testImplementation guice
    testImplementation junit
    testImplementation selenide
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

test {
    String cucumberTags = project.findProperty('tags') ?: "'not @incomplete'"
    String report = project.findProperty('report') ?: 'cucumber'
    Map reportPlugin = [
            allure      : "--plugin io.qameta.allure.cucumber2jvm.AllureCucumber2Jvm",
            cucumber    : "--plugin json:${reporting.baseDir}/cucumber/features.json"
    ]
    List jvmArgList = [
            "-Dcucumber.options=--tags ${cucumberTags} ${reportPlugin[report]} --plugin pretty"
    ] + System.properties.collect { k, v -> "-D$k=$v" }

    jvmArgs = jvmArgList

    testLogging {
        showStandardStreams = true
    }

    //don't take test task output from cache
    outputs.upToDateWhen { false }
}

checkstyle {
    toolVersion = '8.3'
    configDir = new File("${rootDir}/gradle/config/checkstyle")
}